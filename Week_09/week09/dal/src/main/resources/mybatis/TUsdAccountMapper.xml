<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.dal.mapper.TUsdAccountMapper">
  <resultMap id="BaseResultMap" type="com.geek.dal.dao.TUsdAccount">
    <!--@mbg.generated-->
    <!--@Table t_usd_account-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="VARCHAR" property="uid" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="edition" jdbcType="INTEGER" property="edition" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `uid`, amount, edition, created_time, updated_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_usd_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from t_usd_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.geek.dal.dao.TUsdAccount" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_usd_account (`uid`, amount, edition, 
      created_time, updated_time)
    values (#{uid,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT}, #{edition,jdbcType=INTEGER}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.geek.dal.dao.TUsdAccount" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_usd_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="edition != null">
        edition,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="edition != null">
        #{edition,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geek.dal.dao.TUsdAccount">
    <!--@mbg.generated-->
    update t_usd_account
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="edition != null">
        edition = #{edition,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geek.dal.dao.TUsdAccount">
    <!--@mbg.generated-->
    update t_usd_account
    set `uid` = #{uid,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=BIGINT},
      edition = #{edition,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectAllByUid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_usd_account
    where uid=#{uid,jdbcType=VARCHAR}
  </select>

  <update id="updateByPrimaryKeyAndOrder">
    update t_usd_account
    set `uid` = #{tUsdAccount.uid,jdbcType=VARCHAR},
    amount = (#{tUsdAccount.amount,jdbcType=BIGINT} + #{tOrder.amount,jdbcType=BIGINT}),
    edition = #{tUsdAccount.edition,jdbcType=INTEGER},
    created_time = #{tUsdAccount.createdTime,jdbcType=TIMESTAMP},
    updated_time = #{tUsdAccount.updatedTime,jdbcType=TIMESTAMP}
    where id = #{tUsdAccount.id,jdbcType=BIGINT}
  </update>
</mapper>